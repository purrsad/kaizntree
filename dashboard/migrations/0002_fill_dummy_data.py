# Generated by Django 5.0.2 on 2024-02-12 21:19

"""
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("dashboard", "0001_initial"),
    ]

    operations = []
 """

from datetime import datetime
from django.db import migrations
from faker import Faker
from django.utils import timezone
from django.contrib.auth.models import User
import random
import string
from dashboard.models import Category, Items, UserDetails

fake = Faker()

def create_categories(apps, schema_editor):
    # Get the Category model
    Category = apps.get_model('dashboard', 'Category')
    
    # Create some dummy categories
    Category.objects.bulk_create([
        Category(
            category_name=fake.word(),
            description=fake.text(),
            dateCreated=datetime.now(),
            dateModified=datetime.now(),
            isInActive=False,
            isInActiveDate=None
        )
        for _ in range(5)
    ])

def create_users(apps, schema_editor):
    # Get the User model
    User = apps.get_model('auth', 'User')
    
    # Create some dummy users
    User.objects.bulk_create([
        User(
            username=fake.user_name(),
            password=fake.password(),
            last_login=datetime.now(),
            is_staff=False,
            is_active=True,
            is_superuser=False,
            first_name=fake.first_name(),
            last_name=fake.last_name(),
            email=fake.email(),
            date_joined=datetime.now()
        )
        for _ in range(5)
    ])

def create_user_personal_details(apps, schema_editor):
    # Get the User model and UserPersonalDetails model
    User = apps.get_model('auth', 'User')
    UserDetails = apps.get_model('dashboard', 'UserDetails')
    
    # Create some dummy user personal details
    for user in User.objects.all():
        UserDetails.objects.create(
            userId=user,
            firstName=fake.first_name(),
            lastName=fake.last_name(),
            gender=random.choice(['M', 'F', 'N']),
            userType=random.choice(['u1', 'u2']),
            email_address=fake.email(),
            phone_number=fake.phone_number(),
            dateCreated=datetime.now(),
            dateModified=datetime.now(),
            isInActive=False,
            isInActiveDate=None
        )

def create_items(apps, schema_editor):
    # Get the Category model and Items model
    Category = apps.get_model('dashboard', 'Category')
    Items = apps.get_model('dashboard', 'Items')
    
    # Create some dummy items
    for category in Category.objects.all():
        Items.objects.bulk_create([
            Items(
                sku_code=''.join(random.choices(string.ascii_uppercase + string.digits, k=10)),
                item_name=fake.sentence(nb_words=3),
                description=fake.text(),
                category_id=category,
                tags={"tag": fake.word()},
                in_stock=random.randint(0,   100),
                available_stock=random.randint(0,   100),
                units="RANDOM",
                minimum_stock=random.randint(0,   50),
                desired_stock=random.randint(51,   100),
                cost=round(random.uniform(10.00,   100.00),   2),
                assembly_flag=bool(random.getrandbits(1)),
                purchaseable_flag=bool(random.getrandbits(1)),
                component_flag=bool(random.getrandbits(1)),
                salable_flag=bool(random.getrandbits(1)),
                bundle_flag=bool(random.getrandbits(1)),
                dateCreated=datetime.now(),
                dateModified=datetime.now(),
                isInActive=False,
                isInActiveDate=None
            )
            for _ in range(5)
        ])



class Migration(migrations.Migration):

    dependencies = [
        ("dashboard", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(create_users),
        migrations.RunPython(create_categories),
        migrations.RunPython(create_user_personal_details),
        migrations.RunPython(create_items),
    ]
